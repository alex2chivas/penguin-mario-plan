{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authAction.js","store/actions/types.js","components/layout/SingedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","components/config/fbConfig.js","components/config/persistConfig.js","components/config/authIsLoaded.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","initials","className","to","onClick","SignedOutLinks","state","firebase","profile","links","uid","Notifications","console","log","notifications","map","notification","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createAt","calendar","ProjectList","projects","compose","firestoreConnect","collection","limit","firestore","ordered","ownProps","match","params","data","authError","signIn","creds","credentials","signInWithEmailAndPassword","email","password","catch","err","useState","setEmail","setPassword","handleChange","e","setValue","target","toLowerCase","toLocaleLowerCase","value","onSubmit","preventDefault","userLogin","autoComplete","htmlFor","onChange","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","firstName","lastName","setFirstName","setLastName","message","createProject","authId","add","authorId","Date","setTitle","setContent","history","push","App","exact","path","component","Dashboard","ProjectDetails","SignIn","SignUp","CreateProject","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","INITIAL_STATE","authReducer","action","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","persistConfig","storage","whitelist","blacklist","AuthIsLoaded","children","useSelector","isLoaded","persistedReducer","persistReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","persistor","persistStore","rrfProps","userProfile","useFirestoreForProfile","enableRedirectHandling","resetBeforeLogin","createFirestoreInstance","ReactDOM","render","loading","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"sPA8BeA,cAAQ,MANI,SAACC,GAC3B,MAAO,CACNC,QAAS,kBAAMD,GCLY,SAACA,EAAUE,EAAX,IACXC,EADoD,EAAlBA,eAG1CC,OAAOH,UAAUI,MAAK,WAC9BL,EAAS,CACRM,KCnB4B,8BFuBhBP,EAzBO,SAACQ,GAAW,IACzBN,EAAsBM,EAAtBN,QAASO,EAAaD,EAAbC,SACjB,OACC,wBAAIC,UAAU,SACb,4BACC,kBAAC,IAAD,CAASC,GAAG,WAAZ,gBAED,4BACC,uBAAGC,QAASV,GAAZ,YAED,4BACC,kBAAC,IAAD,CAASS,GAAG,IAAID,UAAU,mCACxBD,QGLSI,EATQ,WACnB,OACI,wBAAIH,UAAU,SACV,4BAAI,kBAAC,IAAD,CAASC,GAAG,WAAZ,WACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,WAAZ,YCwBDX,eAPS,SAACc,GACxB,MAAO,CACNT,KAAMS,EAAMC,SAASV,KACrBW,QAASF,EAAMC,SAASC,WAIXhB,EAxBA,SAACQ,GAAW,IAClBH,EAAkBG,EAAlBH,KAAMW,EAAYR,EAAZQ,QAERC,EAAQZ,EAAKa,IAAM,kBAAC,EAAkBF,GAAc,kBAAC,EAAD,MAE1D,OACC,yBAAKN,UAAU,6BACd,yBAAKA,UAAU,aACd,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,cAAvB,aAGCO,O,gCCcUE,EA7BO,SAACX,GACtBY,QAAQC,IAAIb,GADoB,IAExBc,EAAkBd,EAAlBc,cACR,OACC,yBAAKZ,UAAU,WACd,yBAAKA,UAAU,kBACd,yBAAKA,UAAU,gBACd,0BAAMA,UAAU,cAAhB,iBACA,wBAAIA,UAAU,iBACZY,GACAA,EAAcC,KAAI,SAACC,GAElB,OADAJ,QAAQC,IAAIG,GAEX,wBAAIC,IAAKD,EAAaE,IACrB,0BAAMhB,UAAU,aAAac,EAAaG,MAC1C,8BAAOH,EAAaI,QAApB,KACA,0BAAMlB,UAAU,uBACdmB,IAAOL,EAAaM,KAAKC,UAAUC,oBCLhCC,EAZQ,SAACC,GACvB,OACC,yBAAKxB,UAAU,kCACd,yBAAKA,UAAU,wCACd,0BAAMA,UAAU,cAAcwB,EAAQC,OACtC,kDAAiBD,EAAQE,gBAAzB,YAA4CF,EAAQG,iBACpD,uBAAG3B,UAAU,aAAamB,IAAOK,EAAQI,SAASP,UAAUQ,eCWjDC,EAfK,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACtB,OACC,yBAAK/B,UAAU,wBACb+B,GACAA,EAASlB,KAAI,SAACW,GACb,OACC,kBAAC,IAAD,CAAMvB,GAAE,mBAAcuB,EAAQR,IAAMD,IAAKS,EAAQR,IAChD,kBAAC,EAAmBQ,SCwBZQ,cACdC,2BAAiB,CAAE,CAAEC,WAAY,YAAc,CAAEA,WAAY,gBAAiBC,MAAO,KACrF7C,aAVuB,SAACc,GACxB,MAAO,CACN2B,SAAU3B,EAAMgC,UAAUC,QAAQN,SAClCpC,KAAMS,EAAMC,SAASV,KACrBiB,cAAeR,EAAMgC,UAAUC,QAAQzB,kBAI1BoB,EA3BG,SAAClC,GAClBY,QAAQC,IAAIb,GADgB,IAEpBiC,EAAkCjC,EAAlCiC,SAAUpC,EAAwBG,EAAxBH,KAAMiB,EAAkBd,EAAlBc,cACxB,OAAKjB,EAAKa,IAKT,yBAAKR,UAAU,uBACd,yBAAKA,UAAU,OACd,yBAAKA,UAAU,cACd,kBAAC,EAAD,CAAa+B,SAAUA,KAExB,yBAAK/B,UAAU,wBAAwB,kBAAC,EAAD,CAAeY,cAAeA,OAThE,kBAAC,IAAD,CAAUX,GAAG,eCmCP+B,cAAQ1C,aAVC,SAACc,EAAOkC,GAC/B,IAAMtB,EAAKsB,EAASC,MAAMC,OAAOxB,GAC3Be,EAAW3B,EAAMgC,UAAUK,KAAKV,SAEtC,MAAO,CACNP,QAFeO,EAAWA,EAASf,GAAM,KAGzCrB,KAAMS,EAAMC,SAASV,SAI0BsC,2BAAiB,CAAE,CAAEC,WAAY,cAAnEF,EAzCQ,SAAClC,GAAW,IAC1B0B,EAAkB1B,EAAlB0B,QAER,OAF0B1B,EAATH,KAEPa,IAINgB,EAEF,yBAAKxB,UAAU,qCACd,yBAAKA,UAAU,kBACd,yBAAKA,UAAU,gBACd,0BAAMA,UAAU,cAAcwB,EAAQC,OACtC,2BAAID,EAAQN,UAEb,yBAAKlB,UAAU,wCACd,uCAASwB,EAAQE,gBAAjB,YAAoCF,EAAQG,iBAC5C,6BAAMR,IAAOK,EAAQI,SAASP,UAAUQ,eAO3C,yBAAK7B,UAAU,oBACd,mDArBK,kBAAC,IAAD,CAAUC,GAAG,e,QC6DPX,eAbS,SAACc,GACxB,MAAO,CACNsC,UAAWtC,EAAMT,KAAK+C,UACtB/C,KAAMS,EAAMC,SAASV,SAII,SAACJ,GAC3B,MAAO,CACNoD,OAAQ,SAACC,GAAD,OAAWrD,GTlEEsD,ESkEcD,ETlEE,SAACrD,EAAUE,EAAX,IACrBC,EAD8D,EAAlBA,eAI3DC,OACAmD,2BAA2BD,EAAYE,MAAOF,EAAYG,UAC1DpD,MAAK,WACLL,EAAS,CACRM,KCLyB,qBDQ1BoD,OAAM,SAACC,GACP3D,EAAS,CACRM,KCTuB,cDUvBqD,cAdkB,IAACL,MSsERvD,EAnEA,SAACQ,GAAW,IAClB4C,EAAoB5C,EAApB4C,UAAW/C,EAASG,EAATH,KADM,EAGGwD,mBAAS,IAHZ,mBAGjBJ,EAHiB,KAGVK,EAHU,OAISD,mBAAS,IAJlB,mBAIjBH,EAJiB,KAIPK,EAJO,KAMnBC,EAAe,SAACC,GACrB,IAAIC,EAAW,MAAQD,EAAEE,OAAOzC,GAAG0C,cAE/BF,IAAa,WAAWG,qBAC3BP,EAASG,EAAEE,OAAOG,OAGfJ,IAAa,cAAcG,qBAC9BN,EAAYE,EAAEE,OAAOG,QAevB,OAAIjE,EAAKa,IACD,kBAAC,IAAD,CAAUP,GAAG,MAIpB,yBAAKD,UAAU,aACd,0BAAM6D,SAjBa,SAACN,GACrBA,EAAEO,iBAEF,IAAMC,EAAY,CACjBhB,QACAC,YAGDlD,EAAM6C,OAAOoB,IASkB/D,UAAU,QAAQgE,aAAa,OAC5D,wBAAIhE,UAAU,2BAAd,WACA,yBAAKA,UAAU,eACd,2BAAOiE,QAAQ,SAAf,SACA,2BAAOpE,KAAK,QAAQmB,GAAG,QAAQkD,SAAUZ,EAAcU,aAAa,SAErE,yBAAKhE,UAAU,eACd,2BAAOiE,QAAQ,YAAf,YACA,2BAAOpE,KAAK,WAAWmB,GAAG,WAAWkD,SAAUZ,EAAcU,aAAa,SAE3E,yBAAKhE,UAAU,eACd,4BAAQA,UAAU,gCAAlB,SACA,yBAAKA,UAAU,mBAAmB0C,EAAY,2BAAIA,GAAiB,YC0CzDpD,eAbS,SAACc,GACxB,MAAO,CACNT,KAAMS,EAAMC,SAASV,KACrB+C,UAAWtC,EAAMT,KAAK+C,cAIG,SAACnD,GAC3B,MAAO,CACN4E,OAAQ,SAACC,GAAD,OAAa7E,EV3DD,SAAC6E,GAAD,OAAa,SAAC7E,EAAUE,EAAX,GAAwD,IAAjCC,EAAgC,EAAhCA,YAAa2E,EAAmB,EAAnBA,aAChEhE,EAAWX,IACX0C,EAAYiC,IAElBhE,EACEV,OACA2E,+BAA+BF,EAAQrB,MAAOqB,EAAQpB,UACtDpD,MAAK,SAAC2E,GAEN,OADA7D,QAAQC,IAAI4D,GACLnC,EAAUF,WAAW,SAASsC,IAAID,EAAKtD,KAAKT,KAAKiE,IAAI,CAC3DC,UAAWN,EAAQM,UACnBC,SAAUP,EAAQO,SAClB5E,SAAS,GAAD,OAAKqE,EAAQM,UAAU,IAAvB,OAA4BN,EAAQO,SAAS,SAGtD/E,MAAK,WACLL,EAAS,CACRM,KCxC0B,sBD2C3BoD,OAAM,SAACC,GACP3D,EAAS,CACRM,KC5CwB,eD6CxBqD,YUoC4BiB,CAAOC,QAIxB9E,EAxFA,SAACQ,GACfY,QAAQC,IAAIb,GADa,IAEjBH,EAA4BG,EAA5BH,KAAM+C,EAAsB5C,EAAtB4C,UAAWyB,EAAWrE,EAAXqE,OAFA,EAIGhB,mBAAS,IAJZ,mBAIjBJ,EAJiB,KAIVK,EAJU,OAKSD,mBAAS,IALlB,mBAKjBH,EALiB,KAKPK,EALO,OAMWF,mBAAS,IANpB,mBAMjBuB,EANiB,KAMNE,EANM,OAOSzB,mBAAS,IAPlB,mBAOjBwB,EAPiB,KAOPE,EAPO,KASnBvB,EAAe,SAACC,GACrB,IAAIC,EAAW,MAAQD,EAAEE,OAAOzC,GAAG0C,cAE/BF,IAAa,WAAWG,qBAC3BP,EAASG,EAAEE,OAAOG,OAGfJ,IAAa,cAAcG,qBAC9BN,EAAYE,EAAEE,OAAOG,OAGlBJ,IAAa,eAAeG,qBAC/BiB,EAAarB,EAAEE,OAAOG,OAGnBJ,IAAa,cAAcG,qBAC9BkB,EAAYtB,EAAEE,OAAOG,QAiBvB,OAAIjE,EAAKa,IACD,kBAAC,IAAD,CAAUP,GAAG,MAIpB,yBAAKD,UAAU,aACd,0BAAM6D,SAnBa,SAACN,GACrBA,EAAEO,iBASFK,EAPmB,CAClBpB,QACAC,WACA0B,YACAC,cAY8B3E,UAAU,QAAQgE,aAAa,OAC5D,wBAAIhE,UAAU,2BAAd,WACA,yBAAKA,UAAU,eACd,2BAAOiE,QAAQ,SAAf,SACA,2BAAOpE,KAAK,QAAQmB,GAAG,QAAQkD,SAAUZ,EAAcU,aAAa,SAErE,yBAAKhE,UAAU,eACd,2BAAOiE,QAAQ,YAAf,YACA,2BAAOpE,KAAK,WAAWmB,GAAG,WAAWkD,SAAUZ,EAAcU,aAAa,SAE3E,yBAAKhE,UAAU,eACd,2BAAOiE,QAAQ,aAAf,cACA,2BAAOpE,KAAK,OAAOmB,GAAG,YAAYkD,SAAUZ,KAE7C,yBAAKtD,UAAU,eACd,2BAAOiE,QAAQ,YAAf,aACA,2BAAOpE,KAAK,OAAOmB,GAAG,WAAWkD,SAAUZ,KAE5C,yBAAKtD,UAAU,eACd,4BAAQA,UAAU,gCAAlB,WACA,yBAAKA,UAAU,mBAAmB0C,EAAY,+BAAKA,EAAUoC,QAAf,KAA+B,YCHnExF,eAZS,SAACc,GACxB,MAAO,CACNT,KAAMS,EAAMC,SAASV,SAII,SAACJ,GAC3B,MAAO,CACNwF,cAAe,SAACvD,GAAD,OAAajC,ECjED,SAACiC,GAAD,OAAa,SAACjC,EAAUE,EAAX,GAAuD,EAAhCC,YAAiC,IAC3F0C,GAAYiC,EAD8E,EAAnBA,gBAEvE/D,EAAUb,IAAWY,SAASC,QAC9B0E,EAASvF,IAAWY,SAASV,KAAKa,IAExC4B,EACEF,WAAW,YACX+C,IAFF,2BAGKzD,GAHL,IAIEE,gBAAiBpB,EAAQoE,UACzB/C,eAAgBrB,EAAQqE,SACxBO,SAAUF,EACVpD,SAAU,IAAIuD,QAEdvF,MAAK,WACLL,EAAS,CACRM,KXjB0B,iBWkB1B2B,eAGDyB,OAAM,SAACC,GACP3D,EAAS,CACRM,KXtBgC,uBWuBhCqD,YD0CmC6B,CAAcvD,QAItClC,EAlEO,SAACQ,GAAW,IAAD,EACJqD,mBAAS,IADL,mBACxB1B,EADwB,KACjB2D,EADiB,OAEAjC,mBAAS,IAFT,mBAExBjC,EAFwB,KAEfmE,EAFe,KAI1B/B,EAAe,SAACC,GACrB,IAAIC,EAAW,MAAQD,EAAEE,OAAOzC,GAAG0C,cAE/BF,IAAa,WAAWG,qBAC3ByB,EAAS7B,EAAEE,OAAOG,OAGfJ,IAAa,aAAaG,qBAC7B0B,EAAW9B,EAAEE,OAAOG,QAkBtB,OAFiB9D,EAATH,KAEEa,IAKT,yBAAKR,UAAU,aACd,0BAAM6D,SApBa,SAACN,GACrBA,EAAEO,iBAEF,IAAMtC,EAAU,CACfC,QACAP,WAGDpB,EAAMiF,cAAcvD,GACpB1B,EAAMwF,QAAQC,KAAK,MAWYvF,UAAU,QAAQgE,aAAa,OAC5D,wBAAIhE,UAAU,2BAAd,sBACA,yBAAKA,UAAU,eACd,2BAAOiE,QAAQ,SAAf,SACA,2BAAOpE,KAAK,OAAOmB,GAAG,QAAQkD,SAAUZ,EAAcU,aAAa,SAEpE,yBAAKhE,UAAU,eACd,2BAAOiE,QAAQ,WAAf,mBACA,8BAAUjD,GAAG,UAAUhB,UAAU,uBAAuBkE,SAAUZ,KAEnE,yBAAKtD,UAAU,eACd,4BAAQA,UAAU,gCAAlB,aAhBI,kBAAC,IAAD,CAAUC,GAAG,eEXPuF,MAff,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAKC,UAAWC,IAClC,kBAAC,IAAD,CAAOF,KAAK,eAAgBC,UAAWE,IACvC,kBAAC,IAAD,CAAOH,KAAK,UAAWC,UAAWG,IAClC,kBAAC,IAAD,CAAOJ,KAAK,UAAWC,UAAWI,IAClC,kBAAC,IAAD,CAAOL,KAAK,UAAWC,UAAWK,OCPpCC,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS9D,MACvB,2DAsCN,SAAS+D,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACT3G,MAAK,SAAAgH,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB1G,QACfqG,UAAUC,cAAcO,YAI1BvG,QAAQC,IACN,iHAKE6F,GAAUA,EAAOU,UACnBV,EAAOU,SAASN,KAMlBlG,QAAQC,IAAI,sCAGR6F,GAAUA,EAAOW,WACnBX,EAAOW,UAAUP,WAO5B3D,OAAM,SAAAmE,GACL1G,QAAQ0G,MAAM,4CAA6CA,M,aC9F3DC,EAAgB,CACrB3E,UAAW,MAoCG4E,EAjCK,WAAoC,IAAnClH,EAAkC,uDAA1BiH,EAAeE,EAAW,uCACtD,OAAQA,EAAO1H,MACd,IdFyB,ccGxB,OAAO,2BACHO,GADJ,IAECsC,UAAW,iBAEb,IdR2B,gBcU1B,OADAhC,QAAQC,IAAI,iBACL,2BACHP,GADJ,IAECsC,UAAW,OAEb,IdZ6B,kBcc5B,OADAhC,QAAQC,IAAI,kBACLP,EACR,Idd4B,iBcgB3B,OADAM,QAAQC,IAAI,iBACL,2BACHP,GADJ,IAECsC,UAAW,OAEb,IdnB0B,ecqBzB,OADAhC,QAAQC,IAAI,gBACL,2BACHP,GADJ,IAECsC,UAAW6E,EAAOrE,MAEpB,QACC,OAAO9C,ICjCJiH,EAAgB,GAaPG,EAXQ,WAAoC,IAAnCpH,EAAkC,uDAA1BiH,EAAeE,EAAW,uCACzD,OAAQA,EAAO1H,MACd,IfL4B,iBeM3B,OAAOO,EACR,IfNkC,uBeOjC,OAAOM,QAAQC,IAAI,uBAAwB4G,EAAOrE,KACnD,QACC,OAAO9C,I,QCEKqH,EAPKC,YAAgB,CAChC/H,KAAM2H,EACN9F,QAASgG,EACTpF,UAAWuF,mBACXtH,SAAUuH,oB,+BCKZvH,IAASwH,cAXU,CACjBC,OAAQ,0CACRC,WAAY,uCACZC,YAAa,8CACbC,UAAW,uBACXC,cAAe,mCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAKFhI,QAAf,E,2BCfWiI,EAAgB,CAC3BvH,IAAK,OACLwH,Q,OAASA,EACTC,UAAW,CAAC,WACZC,UAAW,CAAC,SCFDC,EAAe,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACxBhJ,EAAOiJ,aAAY,SAACxI,GAAD,OAAWA,EAAMC,SAASV,QACnD,OAAKkJ,mBAASlJ,GACPgJ,EADqB,mDCavBG,EAAmBC,YAAeT,EAAeb,GACjDuB,EAAmB7C,OAAO8C,sCAAwCjH,cAElEkH,EAAQC,YACbL,EACAE,EACCI,YAAgBC,IAAMC,kBAAkB,CAAE5J,0BAAa2E,+BACvDkF,yBAAelJ,IAAUmJ,KAIrBC,EAAYC,YAAaR,GASzBS,EAAW,CAChBtJ,aACAmG,OAT4B,CAC5BoD,YAAa,QACbC,wBAAwB,EACxBC,wBAAwB,EACxBC,kBAAkB,GAMlBxK,SAAU2J,EAAM3J,SAChByK,mDAGDC,IAASC,OACR,kBAAC,IAAD,CAAaC,QAAS,KAAMV,UAAWA,GACtC,kBAAC,IAAD,CAAUP,MAAOA,GAChB,kBAAC,6BAA+BS,EAC/B,kBAAC,EAAD,KACC,kBAAC,EAAD,UAKJS,SAASC,eAAe,SPlClB,SAAkB7D,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAI6D,IAAIC,GAAwBpE,OAAOC,SAASoE,MACpDC,SAAWtE,OAAOC,SAASqE,OAIvC,OAGFtE,OAAOuE,iBAAiB,QAAQ,WAC9B,IAAMnE,EAAK,UAAMgE,GAAN,sBAEPtE,IAgEV,SAAiCM,EAAOC,GAEtCmE,MAAMpE,EAAO,CACXqE,QAAS,CAAE,iBAAkB,YAE5BhL,MAAK,SAAAiL,GAEJ,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5CxE,UAAUC,cAAcwE,MAAMtL,MAAK,SAAAgH,GACjCA,EAAauE,aAAavL,MAAK,WAC7BuG,OAAOC,SAASgF,eAKpB9E,EAAgBC,EAAOC,MAG1BvD,OAAM,WACLvC,QAAQC,IACN,oEAvFA0K,CAAwB9E,EAAOC,GAI/BC,UAAUC,cAAcwE,MAAMtL,MAAK,WACjCc,QAAQC,IACN,iHAMJ2F,EAAgBC,EAAOC,OOY/BE,K","file":"static/js/main.23082bb5.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signOut } from '../../store/actions/rootActions';\n\nconst SignedInLinks = (props) => {\n\tconst { signOut, initials } = props;\n\treturn (\n\t\t<ul className='right'>\n\t\t\t<li>\n\t\t\t\t<NavLink to='/create'>New Project</NavLink>\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<a onClick={signOut}>Log Out</a>\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<NavLink to='/' className='btn btn-floating pink lighten-1'>\n\t\t\t\t\t{initials}\n\t\t\t\t</NavLink>\n\t\t\t</li>\n\t\t</ul>\n\t);\n};\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tsignOut: () => dispatch(signOut())\n\t};\n};\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks);\n","import { LOGIN_SUCCESS, LOGIN_ERROR, SIGNOUT_SUCCESS, SIGNUP_SUCCESS, SIGNUP_ERROR } from './types';\n\nexport const signIn = (credentials) => (dispatch, getState, { getFirebase }) => {\n\tconst firebase = getFirebase();\n\n\tfirebase\n\t\t.auth()\n\t\t.signInWithEmailAndPassword(credentials.email, credentials.password)\n\t\t.then(() => {\n\t\t\tdispatch({\n\t\t\t\ttype: LOGIN_SUCCESS\n\t\t\t});\n\t\t})\n\t\t.catch((err) => {\n\t\t\tdispatch({\n\t\t\t\ttype: LOGIN_ERROR,\n\t\t\t\terr\n\t\t\t});\n\t\t});\n};\n\nexport const signOut = () => (dispatch, getState, { getFirebase }) => {\n\tconst firebase = getFirebase();\n\n\tfirebase.auth().signOut().then(() => {\n\t\tdispatch({\n\t\t\ttype: SIGNOUT_SUCCESS\n\t\t});\n\t});\n};\n\nexport const signUp = (newUser) => (dispatch, getState, { getFirebase, getFirestore }) => {\n\tconst firebase = getFirebase();\n\tconst firestore = getFirestore();\n\n\tfirebase\n\t\t.auth()\n\t\t.createUserWithEmailAndPassword(newUser.email, newUser.password)\n\t\t.then((resp) => {\n\t\t\tconsole.log(resp);\n\t\t\treturn firestore.collection('users').doc(resp.user.uid).set({\n\t\t\t\tfirstName: newUser.firstName,\n\t\t\t\tlastName: newUser.lastName,\n\t\t\t\tinitials: `${newUser.firstName[0]}${newUser.lastName[0]}`\n\t\t\t});\n\t\t})\n\t\t.then(() => {\n\t\t\tdispatch({\n\t\t\t\ttype: SIGNUP_SUCCESS\n\t\t\t});\n\t\t})\n\t\t.catch((err) => {\n\t\t\tdispatch({\n\t\t\t\ttype: SIGNUP_ERROR,\n\t\t\t\terr\n\t\t\t});\n\t\t});\n};\n","// PROJECT ACTIONS\nexport const CREATE_PROJECT = 'CREATE_PROJECT';\nexport const CREATE_PROJECT_ERROR = 'CREATE_PROJECT_ERROR';\n\n// AUTH\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\nexport const SIGNOUT_SUCCESS = 'SIGNOUT_SUCCESS';\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\nexport const SIGNUP_ERROR = 'SIGNUP_ERROR';\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst SignedOutLinks = () => {\n    return (\n        <ul className=\"right\">\n            <li><NavLink to='/signup'>SignUp</NavLink></li>        \n            <li><NavLink to='/signin'>Login</NavLink></li>\n        </ul>\n    );\n}\n\nexport default SignedOutLinks;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport SignedInLinks from './SignedInLinks';\nimport SignedOutLinks from './SingedOutLinks';\n\nconst Navbar = (props) => {\n\tconst { auth, profile } = props;\n\n\tconst links = auth.uid ? <SignedInLinks {...profile} /> : <SignedOutLinks />;\n\n\treturn (\n\t\t<nav className='nav-wrapper grey darken-3'>\n\t\t\t<div className='container'>\n\t\t\t\t<Link to='/' className='brand-logo'>\n\t\t\t\t\tMarioPlan\n\t\t\t\t</Link>\n\t\t\t\t{links}\n\t\t\t</div>\n\t\t</nav>\n\t);\n};\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tauth: state.firebase.auth,\n\t\tprofile: state.firebase.profile\n\t};\n};\n\nexport default connect(mapStateToProps)(Navbar);\n","import React from 'react';\nimport moment from 'moment';\n\nconst Notifications = (props) => {\n\tconsole.log(props);\n\tconst { notifications } = props;\n\treturn (\n\t\t<div className='section'>\n\t\t\t<div className='card z-depth-0'>\n\t\t\t\t<div className='card-content'>\n\t\t\t\t\t<span className='card-title'>Notifications</span>\n\t\t\t\t\t<ul className='notifications'>\n\t\t\t\t\t\t{notifications &&\n\t\t\t\t\t\t\tnotifications.map((notification) => {\n\t\t\t\t\t\t\t\tconsole.log(notification);\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<li key={notification.id}>\n\t\t\t\t\t\t\t\t\t\t<span className='pink-text'>{notification.user}</span>\n\t\t\t\t\t\t\t\t\t\t<span>{notification.content} </span>\n\t\t\t\t\t\t\t\t\t\t<span className='grey-text note-date'>\n\t\t\t\t\t\t\t\t\t\t\t{moment(notification.time.toDate()).fromNow()}\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Notifications;\n","import React from 'react';\nimport moment from 'moment';\n\nconst ProjectSummary = (project) => {\n\treturn (\n\t\t<div className='card z-depth-0 project-summary'>\n\t\t\t<div className='card-content grey-text text-darken-3'>\n\t\t\t\t<span className='card-title'>{project.title}</span>\n\t\t\t\t<p>Posted by {`${project.authorFirstName} ${project.authorLastName}`}</p>\n\t\t\t\t<p className='grey-text'>{moment(project.createAt.toDate()).calendar()}</p>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default ProjectSummary;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport ProjectSummary from './ProjectSummary';\n\nconst ProjectList = ({ projects }) => {\n\treturn (\n\t\t<div className='project-list section'>\n\t\t\t{projects &&\n\t\t\t\tprojects.map((project) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Link to={`/project/${project.id}`} key={project.id}>\n\t\t\t\t\t\t\t<ProjectSummary {...project} />\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t</div>\n\t);\n};\n\nexport default ProjectList;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\n\nimport Notifications from './Notifications';\nimport ProjectList from '../projects/ProjectList';\n\nconst Dashboard = (props) => {\n\tconsole.log(props);\n\tconst { projects, auth, notifications } = props;\n\tif (!auth.uid) {\n\t\treturn <Redirect to='/signin' />;\n\t}\n\n\treturn (\n\t\t<div className='dashboard container'>\n\t\t\t<div className='row'>\n\t\t\t\t<div className='col s12 m6'>\n\t\t\t\t\t<ProjectList projects={projects} />\n\t\t\t\t</div>\n\t\t\t\t<div className='col s12 m5 offset-m1'>{<Notifications notifications={notifications} />}</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tprojects: state.firestore.ordered.projects,\n\t\tauth: state.firebase.auth,\n\t\tnotifications: state.firestore.ordered.notifications\n\t};\n};\n\nexport default compose(\n\tfirestoreConnect([ { collection: 'projects' }, { collection: 'notifications', limit: 3 } ]),\n\tconnect(mapStateToProps)\n)(Dashboard);\n","import React from 'react';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { Redirect } from 'react-router-dom';\nimport moment from 'moment';\n\nconst ProjectDetails = (props) => {\n\tconst { project, auth } = props;\n\n\tif (!auth.uid) {\n\t\treturn <Redirect to='/signin' />;\n\t}\n\n\tif (project) {\n\t\treturn (\n\t\t\t<div className='container section project-details'>\n\t\t\t\t<div className='card z-depth-0'>\n\t\t\t\t\t<div className='card-content'>\n\t\t\t\t\t\t<span className='card-title'>{project.title}</span>\n\t\t\t\t\t\t<p>{project.content}</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='card-action grey lighten-4 grey-text'>\n\t\t\t\t\t\t<div>{`${project.authorFirstName} ${project.authorLastName}`}</div>\n\t\t\t\t\t\t<div>{moment(project.createAt.toDate()).calendar()}</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t} else {\n\t\treturn (\n\t\t\t<div className='container center'>\n\t\t\t\t<p>Loading project....</p>\n\t\t\t</div>\n\t\t);\n\t}\n};\n\nconst mapStateToProps = (state, ownProps) => {\n\tconst id = ownProps.match.params.id;\n\tconst projects = state.firestore.data.projects;\n\tconst project = projects ? projects[id] : null;\n\treturn {\n\t\tproject,\n\t\tauth: state.firebase.auth\n\t};\n};\n\nexport default compose(connect(mapStateToProps), firestoreConnect([ { collection: 'projects' } ]))(ProjectDetails);\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { signIn } from '../../store/actions/rootActions';\nimport { Redirect } from 'react-router-dom';\n\nconst SignIn = (props) => {\n\tconst { authError, auth } = props;\n\n\tconst [ email, setEmail ] = useState('');\n\tconst [ password, setPassword ] = useState('');\n\n\tconst handleChange = (e) => {\n\t\tlet setValue = 'set' + e.target.id.toLowerCase();\n\n\t\tif (setValue === 'setEmail'.toLocaleLowerCase()) {\n\t\t\tsetEmail(e.target.value);\n\t\t}\n\n\t\tif (setValue === 'setPassword'.toLocaleLowerCase()) {\n\t\t\tsetPassword(e.target.value);\n\t\t}\n\t};\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\tconst userLogin = {\n\t\t\temail,\n\t\t\tpassword\n\t\t};\n\n\t\tprops.signIn(userLogin);\n\t};\n\n\tif (auth.uid) {\n\t\treturn <Redirect to='/' />;\n\t}\n\n\treturn (\n\t\t<div className='container'>\n\t\t\t<form onSubmit={handleSubmit} className='white' autoComplete='off'>\n\t\t\t\t<h5 className='grey-text text-darken-3'>Sign In</h5>\n\t\t\t\t<div className='input-field'>\n\t\t\t\t\t<label htmlFor='email'>Email</label>\n\t\t\t\t\t<input type='email' id='email' onChange={handleChange} autoComplete='off' />\n\t\t\t\t</div>\n\t\t\t\t<div className='input-field'>\n\t\t\t\t\t<label htmlFor='password'>Password</label>\n\t\t\t\t\t<input type='password' id='password' onChange={handleChange} autoComplete='off' />\n\t\t\t\t</div>\n\t\t\t\t<div className='input-field'>\n\t\t\t\t\t<button className='btn pink lighten-1 z-depth-0'>Login</button>\n\t\t\t\t\t<div className='red-text center'>{authError ? <p>{authError}</p> : null}</div>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</div>\n\t);\n};\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tauthError: state.auth.authError,\n\t\tauth: state.firebase.auth\n\t};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tsignIn: (creds) => dispatch(signIn(creds))\n\t};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nimport { signUp } from '../../store/actions/rootActions';\n\nconst SignUp = (props) => {\n\tconsole.log(props);\n\tconst { auth, authError, signUp } = props;\n\n\tconst [ email, setEmail ] = useState('');\n\tconst [ password, setPassword ] = useState('');\n\tconst [ firstName, setFirstName ] = useState('');\n\tconst [ lastName, setLastName ] = useState('');\n\n\tconst handleChange = (e) => {\n\t\tlet setValue = 'set' + e.target.id.toLowerCase();\n\n\t\tif (setValue === 'setEmail'.toLocaleLowerCase()) {\n\t\t\tsetEmail(e.target.value);\n\t\t}\n\n\t\tif (setValue === 'setPassword'.toLocaleLowerCase()) {\n\t\t\tsetPassword(e.target.value);\n\t\t}\n\n\t\tif (setValue === 'setFirstName'.toLocaleLowerCase()) {\n\t\t\tsetFirstName(e.target.value);\n\t\t}\n\n\t\tif (setValue === 'setLastName'.toLocaleLowerCase()) {\n\t\t\tsetLastName(e.target.value);\n\t\t}\n\t};\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\tconst signUpUser = {\n\t\t\temail,\n\t\t\tpassword,\n\t\t\tfirstName,\n\t\t\tlastName\n\t\t};\n\n\t\tsignUp(signUpUser);\n\t};\n\n\tif (auth.uid) {\n\t\treturn <Redirect to='/' />;\n\t}\n\n\treturn (\n\t\t<div className='container'>\n\t\t\t<form onSubmit={handleSubmit} className='white' autoComplete='off'>\n\t\t\t\t<h5 className='grey-text text-darken-3'>Sign Up</h5>\n\t\t\t\t<div className='input-field'>\n\t\t\t\t\t<label htmlFor='email'>Email</label>\n\t\t\t\t\t<input type='email' id='email' onChange={handleChange} autoComplete='off' />\n\t\t\t\t</div>\n\t\t\t\t<div className='input-field'>\n\t\t\t\t\t<label htmlFor='password'>Password</label>\n\t\t\t\t\t<input type='password' id='password' onChange={handleChange} autoComplete='off' />\n\t\t\t\t</div>\n\t\t\t\t<div className='input-field'>\n\t\t\t\t\t<label htmlFor='firstName'>First Name</label>\n\t\t\t\t\t<input type='text' id='firstName' onChange={handleChange} />\n\t\t\t\t</div>\n\t\t\t\t<div className='input-field'>\n\t\t\t\t\t<label htmlFor='lastName'>Last Name</label>\n\t\t\t\t\t<input type='text' id='lastName' onChange={handleChange} />\n\t\t\t\t</div>\n\t\t\t\t<div className='input-field'>\n\t\t\t\t\t<button className='btn pink lighten-1 z-depth-0'>SIGN UP</button>\n\t\t\t\t\t<div className='red-text center'>{authError ? <p> {authError.message} </p> : null}</div>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</div>\n\t);\n};\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tauth: state.firebase.auth,\n\t\tauthError: state.auth.authError\n\t};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tsignUp: (newUser) => dispatch(signUp(newUser))\n\t};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\n","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createProject } from '../../store/actions/rootActions';\n\nconst CreateProject = (props) => {\n\tconst [ title, setTitle ] = useState('');\n\tconst [ content, setContent ] = useState('');\n\n\tconst handleChange = (e) => {\n\t\tlet setValue = 'set' + e.target.id.toLowerCase();\n\n\t\tif (setValue === 'setTitle'.toLocaleLowerCase()) {\n\t\t\tsetTitle(e.target.value);\n\t\t}\n\n\t\tif (setValue === 'setContent'.toLocaleLowerCase()) {\n\t\t\tsetContent(e.target.value);\n\t\t}\n\t};\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\tconst project = {\n\t\t\ttitle,\n\t\t\tcontent\n\t\t};\n\n\t\tprops.createProject(project);\n\t\tprops.history.push('/');\n\t};\n\n\tconst { auth } = props;\n\n\tif (!auth.uid) {\n\t\treturn <Redirect to='/signin' />;\n\t}\n\n\treturn (\n\t\t<div className='container'>\n\t\t\t<form onSubmit={handleSubmit} className='white' autoComplete='off'>\n\t\t\t\t<h5 className='grey-text text-darken-3'>Create new Project</h5>\n\t\t\t\t<div className='input-field'>\n\t\t\t\t\t<label htmlFor='title'>Title</label>\n\t\t\t\t\t<input type='text' id='title' onChange={handleChange} autoComplete='off' />\n\t\t\t\t</div>\n\t\t\t\t<div className='input-field'>\n\t\t\t\t\t<label htmlFor='content'>Project Content</label>\n\t\t\t\t\t<textarea id='content' className='materialize-textarea' onChange={handleChange} />\n\t\t\t\t</div>\n\t\t\t\t<div className='input-field'>\n\t\t\t\t\t<button className='btn pink lighten-1 z-depth-0'>Create</button>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</div>\n\t);\n};\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tauth: state.firebase.auth\n\t};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tcreateProject: (project) => dispatch(createProject(project))\n\t};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);\n","import { CREATE_PROJECT, CREATE_PROJECT_ERROR } from './types';\n\nexport const createProject = (project) => (dispatch, getState, { getFirebase, getFirestore }) => {\n\tconst firestore = getFirestore();\n\tconst profile = getState().firebase.profile;\n\tconst authId = getState().firebase.auth.uid;\n\n\tfirestore\n\t\t.collection('projects')\n\t\t.add({\n\t\t\t...project,\n\t\t\tauthorFirstName: profile.firstName,\n\t\t\tauthorLastName: profile.lastName,\n\t\t\tauthorId: authId,\n\t\t\tcreateAt: new Date()\n\t\t})\n\t\t.then(() => {\n\t\t\tdispatch({\n\t\t\t\ttype: CREATE_PROJECT,\n\t\t\t\tproject\n\t\t\t});\n\t\t})\n\t\t.catch((err) => {\n\t\t\tdispatch({\n\t\t\t\ttype: CREATE_PROJECT_ERROR,\n\t\t\t\terr\n\t\t\t});\n\t\t});\n};\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Navbar />\n      <Switch>\n        <Route exact path='/'  component={Dashboard} />\n        <Route path='/project/:id'  component={ProjectDetails} />\n        <Route path='/signin'  component={SignIn} />\n        <Route path='/signup'  component={SignUp} />\n        <Route path='/create'  component={CreateProject} />\n      </Switch>\n    </BrowserRouter>\n  );   \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { LOGIN_SUCCESS, LOGIN_ERROR, SIGNOUT_SUCCESS, SIGNUP_SUCCESS, SIGNUP_ERROR } from '../actions/types';\n\nconst INITIAL_STATE = {\n\tauthError: null\n};\n\nconst authReducer = (state = INITIAL_STATE, action) => {\n\tswitch (action.type) {\n\t\tcase LOGIN_ERROR:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tauthError: 'Login failed'\n\t\t\t};\n\t\tcase LOGIN_SUCCESS:\n\t\t\tconsole.log('login success');\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tauthError: null\n\t\t\t};\n\t\tcase SIGNOUT_SUCCESS:\n\t\t\tconsole.log('signout succes');\n\t\t\treturn state;\n\t\tcase SIGNUP_SUCCESS:\n\t\t\tconsole.log('signup succes');\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tauthError: null\n\t\t\t};\n\t\tcase SIGNUP_ERROR:\n\t\t\tconsole.log('singup error');\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tauthError: action.err\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default authReducer;\n","import { CREATE_PROJECT, CREATE_PROJECT_ERROR } from '../actions/types';\n\nconst INITIAL_STATE = {};\n\nconst projectReducer = (state = INITIAL_STATE, action) => {\n\tswitch (action.type) {\n\t\tcase CREATE_PROJECT:\n\t\t\treturn state;\n\t\tcase CREATE_PROJECT_ERROR:\n\t\t\treturn console.log('create project error', action.err);\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default projectReducer;\n","import authReducer from './authReducer'\nimport projectReducer from './projectReducer';\nimport { combineReducers } from 'redux'\nimport { firestoreReducer } from 'redux-firestore';\nimport { firebaseReducer } from 'react-redux-firebase';\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    project: projectReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n})\n\nexport default rootReducer","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyDwSDfDR2oB_LqJd7xBOVwxa4zKyKhbPqM\",\n    authDomain: \"alex-marioplan-15f34.firebaseapp.com\",\n    databaseURL: \"https://alex-marioplan-15f34.firebaseio.com\",\n    projectId: \"alex-marioplan-15f34\",\n    storageBucket: \"alex-marioplan-15f34.appspot.com\",\n    messagingSenderId: \"850391479841\",\n    appId: \"1:850391479841:web:bd3aeaeccec88cda6c9560\",\n    measurementId: \"G-F3L20YBGRK\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n\n  export default firebase;","import storage from 'redux-persist/lib/storage'\n\nexport const persistConfig = {\n  key: 'root',\n  storage: storage,\n  whitelist: ['project'], // which reducer want to store\n  blacklist: ['auth']\n};","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { isLoaded } from 'react-redux-firebase';\n\nexport const AuthIsLoaded = ({ children }) => {\n\tconst auth = useSelector((state) => state.firebase.auth);\n\tif (!isLoaded(auth)) return <div>Loading Screen...</div>;\n\treturn children;\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './store/reducers/rootReducer';\nimport { reduxFirestore, getFirestore, createFirestoreInstance } from 'redux-firestore';\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase';\nimport firebase from 'firebase/app';\nimport fbConfig from './components/config/fbConfig';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { persistConfig } from './components/config/persistConfig';\nimport { AuthIsLoaded } from './components/config/authIsLoaded';\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose();\n\nconst store = createStore(\n\tpersistedReducer,\n\tcomposeEnhancers(\n\t\tapplyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n\t\treduxFirestore(firebase, fbConfig)\n\t)\n);\n\nconst persistor = persistStore(store);\n\nconst profileSpecificProps = {\n\tuserProfile: 'users',\n\tuseFirestoreForProfile: true,\n\tenableRedirectHandling: false,\n\tresetBeforeLogin: false\n};\n\nconst rrfProps = {\n\tfirebase,\n\tconfig: profileSpecificProps,\n\tdispatch: store.dispatch,\n\tcreateFirestoreInstance\n};\n\nReactDOM.render(\n\t<PersistGate loading={null} persistor={persistor}>\n\t\t<Provider store={store}>\n\t\t\t<ReactReduxFirebaseProvider {...rrfProps}>\n\t\t\t\t<AuthIsLoaded>\n\t\t\t\t\t<App />\n\t\t\t\t</AuthIsLoaded>\n\t\t\t</ReactReduxFirebaseProvider>\n\t\t</Provider>\n\t</PersistGate>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}